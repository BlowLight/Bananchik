#include <iostream> 
#include <SFML/Graphics.hpp>
#include "map.h"
#include "view.h"
#include <iostream>


using namespace sf;



//--------------------------------------------------------КЛАСС ИГРОКА---------------------------------------------------
class Player { 
private: float x, y;//координаты игрока х и у
public:

	float  w, h, dx, dy, speed = 0; //высота ширина, ускорение (по х и по у), сама скорость
	int dir = 0; //направление движения игрока
	String File; 
	bool life;//жизнь игрока- пусть будет пока 
	Image image;
	Texture texture;//сфмл текстура
	Sprite sprite;//сфмл спрайт

	Player(String F, float X, float Y, float W, float H) {  //Конструктор с параметрами для класса player
		
		File = F;
		w = W; h = H;
		image.loadFromFile(File);//загрузка изображения
		texture.loadFromImage(image);//текстурина
		sprite.setTexture(texture);//заливочка
		x = X; y = Y;//координата появления банана
		sprite.setTextureRect(IntRect(0, 0, w, h));  
	}



	void update(float time) //функция дает движение банану
	{
		switch (dir)//движение по направлению
		{
		case 0: dx = speed; dy = 0;   break;//банан идет только вправо
		case 1: dx = -speed; dy = 0;   break;//банан идет только влево
		case 2: dx = 0; dy = speed;   break;//банан идет только вниз
		case 3: dx = 0; dy = -speed;   break;//банан идет только вверх
		}

		x += dx*time;//движение
		y += dy*time;

		speed = 0;//остановка
		sprite.setPosition(x, y);
		interactionWithMap();//взаимодействие с картой
	}
	float getplayercoordinateX() {	//будем забирать координату Х	
		return x;
	}
	float getplayercoordinateY() {	//будем забирать координату Y 	
		return y;
	}

	void interactionWithMap()//ф-ция взаимодействия с картой
	{

		for (int i = y / 32; i < (y + h) / 32; i++)//задаем квадрат, который будет проверять местность
			for (int j = x / 32; j<(x + w) / 32; j++)
			{
				if (a[i][j] == '0')//если наш квадратик соответствует символу 0 (стена), то проверяем, куда мы шли:
				{
					if (dy>0)//вниз
					{
						y = i * 32 - h;					}
					if (dy<0)//вверх
					{
						y = i * 32 + 32;
					}
					if (dx>0)//вправо
					{
						x = j * 32 - w;
					}
					if (dx < 0)//влево
					{
						x = j * 32 + 32;
					}
				}
				if (a[i][j] == 'h') {
					MapGenerate();
					a[i][j] = ' ';//убрали сердечко
				}
			}
	}
};


int main()
{ 
	
	Image map_image;//изображение для карты
	map_image.loadFromFile("map.png");//загружаем картинку
	Texture map;//текстура карты
	map.loadFromImage(map_image);//заряжаем текстуру картинкой
	Sprite s_map;
	s_map.setTexture(map);


	RenderWindow window(sf::VideoMode(640, 480), "Banana's Travelling");//окно
	view.reset(sf::FloatRect(0, 0, 640, 480));//размер "вида" камеры при создании объекта вида к
	view.reset(sf::FloatRect(0, 0, 1040, 1040)); 

	Clock clock;

	Player p("banan.png", 45, 45, 25, 25);//гг = банан, координата Х,У, ширина, высота.


	while (window.isOpen())
	{

		float time = clock.getElapsedTime().asMicroseconds();
		clock.restart();
		time = time / 800;


		sf::Event event;
		
		MapGenerate();
		while (window.pollEvent(event))
		{
			if (event.type == sf::Event::Closed)
				window.close();
		}


		//----------------------------------------Управление персонажем-----------------------------------------------------
		if (Keyboard::isKeyPressed(Keyboard::Left)) {
			p.dir = 1; p.speed = 0.1;
			p.sprite.setTextureRect(IntRect(0, 0, 50, 50)); 
			}

		if (Keyboard::isKeyPressed(Keyboard::Right)) {
			p.dir = 0; p.speed = 0.1;
			p.sprite.setTextureRect(IntRect(0, 0, 50, 50));  
			}

		if (Keyboard::isKeyPressed(Keyboard::Up)) {
			p.dir = 3; p.speed = 0.1;
			p.sprite.setTextureRect(IntRect(0, 0, 50, 50));  
			}

		if (Keyboard::isKeyPressed(Keyboard::Down)) { 
			p.dir = 2; p.speed = 0.1;
			p.sprite.setTextureRect(IntRect(0, 0, 50, 50)); 
			}

		p.update(time);//оживляем объект p класса Player с помощью времени, передавая время в качестве параметра функции update. благодаря этому персонаж может двигаться
		viewmap(time);//функция скроллинга карты, передаем ей время 
		window.setView(view);//"оживляем" камеру в окне sfml
		window.clear(Color(128, 106, 89));
		//----------------------------------------------------карта лабиринта----------------------------------------------------------------
		for (int i = 0; i < h; i++)
			for (int j = 0; j < w; j++)
			{
				if (a[i][j] == ' ')  s_map.setTextureRect(IntRect(0, 0, 32, 32)); //если встретили символ пробел, то рисуем 1й квадратик
				if ((a[i][j] == '0')) s_map.setTextureRect(IntRect(64, 0, 32, 32));//если встретили символ 0, то рисуем 3й квадратик
				if ((a[i][j] == 'h')) s_map.setTextureRect(IntRect(128, 0, 32, 32));//и сердечко
				s_map.setPosition(j * 32, i * 32);//задает каждому из квадратиков них позицию.

				window.draw(s_map);//рисуем квадратики на экран
			}

		Font font;//шрифт 
		font.loadFromFile("CyrilicOld.ttf");//передаем нашему шрифту файл шрифта
		Text text("", font, 30);//создаем объект
		text.setColor(Color::Red);//покрасили текст в красный. если убрать эту строку, то по умолчанию он белый
		text.setStyle(sf::Text::Bold | sf::Text::Underlined);//жирный и подчеркну
		text.setString("Помогите бананчику выбраться из лабиринта");//задает строку тексту
		text.setPosition(view.getCenter().x, view.getCenter().y);//задаем позицию текста, центр камеры
		text.setPosition(view.getCenter().x - 165, view.getCenter().y - 200);//за
		window.draw(text);//рисую этот текст
		window.draw(p.sprite);//рисуем банан 
		window.display();
	}

	return 0;
}
